# -*- coding: utf-8 -*-
"""Spreadsheet.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1F-aTbEAbbiCT0PpxDePtUMEB1_LWfFJ6
"""

import csv
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# install the pandas profile() library
# !pip install pandas-profiling==2.7.1

# load the dataset
data = pd.read_csv('supermarket_sales - Sheet1.csv')
data

# Save the report as an html file
# from pandas_profiling import ProfileReport
# report = ProfileReport(data)
# report.to_file("Sales.html")

#Make a copy of the dataframe and work with the copy to prevent data distortion
#in the original data
newdata = data.copy()
newdata

#display the attribute type of the columns 
newdata.info()

#change Date fromm object to Datetime
newdata['Date']=pd.to_datetime(newdata['Date'])
# check if changes have been made
newdata.info()

#Change date to read only the month and year
newdata["Month"]=newdata['Date'].apply(lambda x: x.strftime('%Y-%m'))
newdata["Month"]

#Calculating the monthly sales
monthly_sales = newdata.groupby("Month").sum()
print(monthly_sales['Total'])
months = [month for month, monthly_sales in newdata.groupby("Month")]

#visualization of monthly sales per month
plt.figure(figsize = (15,10))
plt.bar(months, monthly_sales['Total'],color = 'hotpink')
plt.xticks(months, rotation='horizontal',size=10)
plt.title('Total Monthly Sales')
plt.ylabel('Total Sales')
plt.xlabel('Month')
plt.show()

highest_monthly_sales = newdata.groupby("Month").max()
print(highest_monthly_sales)
months = [month for month, monthly_sales in newdata.groupby("Month")]

#visualization of monthly sales per month
plt.figure(figsize = (15,10))
plt.bar(months, highest_monthly_sales['Total'],color = 'red')
plt.xticks(months, rotation='horizontal',size=10)
plt.title('Highest Daily Sales by Month')
plt.ylabel('Total Sales')
plt.xlabel('Month')
plt.show()

#Calculating the total sales by gender
monthly_sales = newdata.groupby("Gender").sum()
print(monthly_sales['Total'])
months = [month for month, monthly_sales in newdata.groupby("Gender")]

#visualization of total sales by gender 
y = monthly_sales['Total']
mylabels = monthly_sales['Total']

plt.pie(y, labels = mylabels)
plt.title('Total Sales by Gender')
plt.show()

#Calculating the total sales by customer type
monthly_sales = newdata.groupby("Customer type").sum()
print(monthly_sales['Total'])
months = [month for month, monthly_sales in newdata.groupby("Customer type")]

#visualization of total sales by Customer Type
y = monthly_sales['Total']
mylabels = monthly_sales['Total']

plt.pie(y, labels = mylabels)
plt.title('Total Sales by Customer Type')
plt.show()

# #visualization of monthly sales per gender 
# plt.figure(figsize = (15,10))
# plt.bar(months, monthly_sales['Total'],color = 'green')
# plt.xticks(months, rotation='horizontal',size=10)
# plt.ylabel('Total')
# plt.xlabel('Gender')
# plt.show()

#Calculating the monthly sales per branch
monthly_sales = newdata.groupby("Branch").sum()
print(monthly_sales['Total'])
months = [month for month, monthly_sales in newdata.groupby("Branch")]

#visualization of monthly sales
plt.figure(figsize = (15,10))
plt.bar(months, monthly_sales['Total'],color = 'blue')
plt.xticks(months, rotation='horizontal',size=10)
plt.ylabel('Total')
plt.xlabel('Branch')
plt.show()

#Calculating the monthly sales per product
monthly_sales = newdata.groupby("Product line").sum()
print(monthly_sales['Total'])
months = [month for month, monthly_sales in newdata.groupby("Product line")]

#visualization of monthly sales
plt.figure(figsize = (15,10))
plt.bar(months, monthly_sales['Total'],color = 'purple')
plt.xticks(months, rotation='horizontal',size=10)
plt.ylabel('Total')
plt.xlabel('Product line')
plt.show()

highest_sale = newdata['Total'].max()
# highest_sale
lowest_sale = newdata['Total'].min()
# lowest_sale
Change = (highest_sale - lowest_sale)
change_in_percentage = (Change / highest_sale ) * 100
change_in_percentage

#Reading the csv file
with open('supermarket_sales - Sheet1.csv', 'r') as File:
    spreadsheet = csv.DictReader(File)
    for row in spreadsheet:
       # print(row)

def read_data ():
  data = []

  with open('supermarket_sales - Sheet1.csv', 'r') as sales_csv:
    spreadsheet = csv.DictReader(sales_csv)
    for row in spreadsheet:
      data.append(row)
  return data

def run():
    data = read_data()
    total_sales = []
    Unit_Price = []

    for row in data:
        sale = float(row['Total'])
        total_sales.append(sale)
        Sale = float(row["Unit price"])
        Unit_Price.append(Sale)

    sum_of_numbers = sum(total_sales)
    count = len(total_sales)
    average = sum_of_numbers/count
    highest_sale = max(total_sales)
    lowest_sale = min(total_sales)
    Change = highest_sale - lowest_sale
    change_in_percentage = (Change / highest_sale ) * 100
    Max_price = max(Unit_Price)
    Min_price = min(Unit_Price)
    print(f'The highest daily sales: {highest_sale} \n')
    print(f'The lowest daily sales : {lowest_sale} \n')
    print(f"The average sales : {average} \n")
    print(f"The percentage difference between highest and lowest daily sales:{change_in_percentage}% \n")
    print(f"The highest cost of a product is: {Max_price} \n")
    print(f"The lowest cost of the product is: {Min_price} \n")
run()